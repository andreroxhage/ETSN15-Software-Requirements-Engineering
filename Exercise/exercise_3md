# ETSN15 Kravhantering 25-vt1

## 칐vning 3 - Prototyping (PROTO1/2), Funktionella krav (Lau:3-5)

### 1. Planera prototyping i ditt projekt (f칬r elicitation och validering) genom att 칬verv칛ga f칬ljande aspekter:  
(Purpose, Prototype Scope, Prototype Media, Prototype Use) [PROTO1].

- **a)** Vad vill du l칛ra dig fr친n prototypingen?  
- **b)** Vilken typ av prototyp beh칬vs?  
- **c)** Hur ska denna prototyp anv칛ndas f칬r att f친 dessa insikter?  
  - Med vem?
  - Vilken granskningsmetod och anv칛ndningsmilj칬?

How the product works
Validation
---

### 2. Vilka funktionella stilar anv칛ndes i f칬ljande fall? [Lau 칬vn 3.2]
- **Danish Shipyard:** Kap 5.2.1.1.1, Kap 5.4, Kap 5.2.4, Fig 11.1, Fig 11.10  
- **Bruel & Kjaer:** R-4  
- **Tax Payers:** R2, R3  

*Hitta g칛rna fler egna exempel p친 kravtyper i specifikationerna!*

---

### 3. F칬r ditt projekt (eller Ticket Machine, sida 543) [Lau 칬vn 3.7]
- **b)** Skriv uppgiftsbeskrivningar (Kap 3.6) f칬r tv친 till tre anv칛ndaruppgifter.  
  - Om l칛mpligt, skriv *Tasks & Support* (Kap 3.8) snarare 칛n enkla uppgiftsbeskrivningar.
- **e)** Skapa ett datafl칬desdiagram f칬r en del av systemet (v칛lj en l칛mplig niv친).  
  - Diskutera skillnaderna mellan datafl칬desdiagrammet och uppgiftsbeskrivningen.
- **f)** Vilka funktionella kravstilar skulle du f칬resl친 att anv칛nda i detta fall, f칬r varje kravniv친?  
  - 칐verv칛g alla stilar i kapitel 3 (+2, 4), inte bara de du anv칛nde ovan.

> **OBS:** Om du redan har utkast till krav, arbeta med dessa. 칐verv칛g hur de kan specificeras med andra tekniker.

---

### 4. F칬r ditt projekt:  
Nu n칛r din f칬rst친else f칬r dom칛nen och produkten har 칬kat, uppdatera ditt **kontextdiagram** (Kap 3.2) genom att:

- **a)** L칛gga till ytterligare akt칬rer och interagerande system.  
- **b)** Identifiera h칬g-niv친 funktioner som fl칬dar mellan din produkt och akt칬rer samt andra system.  
  - *(Markera detta p친 pilarna.)*

---

### 游늷 Att g칬ra hemma  
J칛mf칬r **datafl칬desdiagram** och **uppgiftsbeskrivningar**, exempelvis baserat p친 f칬ljande faktorer: [Lau 칬vn 3.5]

- Precision av input/output  
- Precision av funktion  
- Precision av anv칛ndaruppgifter  
- Kundf칬rst친else  
- Utvecklarf칬rst친else  
- Problembeskrivning  
- Designoberoende  
- Verifiering  

游닀 *Se kapitel 3.6 och 3.14*
